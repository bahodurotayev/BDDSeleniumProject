Selenium with Java Cucumber Hybrid Framework

Hybrid -> Hybrid Framework in Selenium is a concept where we are using the advantage
 of both Keyword driven framework as well as Data driven framework.
 
 step 1.setup & Configuration
		i.JDK
		ii.Eclipse or Intellij
		iii.Cucumber plugin & Natural plugin in Eclipse or Intellij through
			market place 
		iV.Set Environment variables
			a.Java Home
			b.Maven Home
 step 2.Create Maven Project and update pom.xml with below dependencies
		i.Cucumeber-core
		ii.Cucumber -html
		iii.Coberture code coverage
		iV.Cucumber-java
		V.Cucumber-junit
		Vi.Cucumber-jvm-deps
		Vii.Cucumber-reporting
		Viii.Hamcrest-core
		iX.Gherkin
		X.Junit
		Xi.Selenium-java
		Xii.Log4j
		
 step 3.Create Folder Structure
	Project Name
	|
	Features(pacgake)
	|
	stepDefinitions
	|
	utilities(package)
	|
	Driver(Folder)
	|
	Target(Reports)
	|
	pom.xml
	
step 4. Copy Driver into "Driver" folder
step 5. Automating Login Test Case

		i.Create Login.feature under Feature.File folder
		ii.Create Page Object class LoginPage.Java under pageObjects Package
		iii.Create steps.java under stepDefinitions package and implement required method
		iV.Create TestRunner.java under myRanner package
		
step 6.Automating add new customer Test
	i.Create a Customer.feature under Features File folder
	ii.Create Page object class AddcustomerPage.java under pageObject package
	iii.Add steps in to steps.java under stepDefinations package and implement required methods
	iV.Create TestRunner.java under myRunner Package

step 7.Automating search
	i.Add Customer search scenario to Customer.feature under Feature File folder
	ii.Create Page Object class SearchCustomerPage.java under pageObject Package
	iii.Add steps in to steps.java under stepDefinitions package and implement methods.
	iV. Create TestRunner under myRunner package

step 8. Adding logs using Log4J API
    i.Copy log4j.properties file in project home directory
    ii.Add new method setup() with @Before hook in steps.java under stepDefinistions
    iii.Write setup code inside setup() method.

step 9. Run test on desired browser
    i.Create config.properties file in project home directory which contains common properties (browser name and paths).
    ii.Load config.properties file and use common properties in setup() method in steps.java under stepDefinitions
    iii.Write setup code inside setup() method
		
		